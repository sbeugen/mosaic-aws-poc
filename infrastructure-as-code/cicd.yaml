AWSTemplateFormatVersion: '2010-09-09'
Description: 'CI/CD setup for mosaic-aws-poc'
Parameters:
  GitHubOwner:
    Default: 'sbeugen'
    Description: The owner or organization for the GitHub project
    Type: String
  GitHubRepo:
    Default: 'mosaic-aws-poc'
    Description: The GitHub repository name
    Type: String
  GitHubToken:
    Description: OAuth-Token for GitHub-Access
    Type: String

Resources:
  ### Needed Resources across multiple pipelines
  BuildIntegrationS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: 'mosaic-aws-poc-build-integration'

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 'mosaic-aws-poc-code-build-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
  CodeBuildRolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: 'mosaic-aws-poc-code-build-base-policy'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Resource: '*'
            Action:
              - s3:*
              - logs:*
              - sts:AssumeRole
      Roles:
        - !Ref CodeBuildRole
  CloudFormationTrustRole:
    Description: Creating service role in IAM for AWS CloudFormation
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - codestar:*
                  - s3:*
                  - lambda:*
                  - dynamodb:*
                  - kinesis:*
                  - cloudformation:*
                  - sns:*
                  - config:*
                  - iam:*
                  - apigateway:*
                  - cloudwatch:*
                Effect: Allow
                Resource: '*'
          PolicyName: 'mosaic-aws-poc-cloudformation-policy'
      RoleName: 'mosaic-aws-poc-cloudformation-role'
    Type: AWS::IAM::Role
  CodePipelineTrustRole:
    Description: Creating service role in IAM for AWS CodePipeline
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Sid: 1
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:*
                  - codebuild:*
                  - cloudformation:*
                Effect: Allow
                Resource: '*'
              - Action:
                  - iam:PassRole
                Effect: Allow
                Resource:
                  - !GetAtt 'CloudFormationTrustRole.Arn'
          PolicyName: 'mosaic-aws-poc-code-pipeline-policy'
      RoleName: 'mosaic-aws-poc-code-pipeline-role'
    Type: AWS::IAM::Role

  ### Resources needed to publish mosaic templates
  ### S3 Buckets
  TemplateS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: 'mosaic-aws-poc-templates'

  ### CodeBuild
  TemplateCodeBuildProject:
    DependsOn:
      - CodeBuildRole
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
        Packaging: zip
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: TEMPLATE_BUCKET_NAME
            Value: !Ref TemplateS3Bucket
      Name: 'mosaic-aws-poc-template'
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: 'mosaic-templates/buildspec.yml'

  ### CodePipeline
  TemplatePipeline:
    DependsOn:
      - CodePipelineTrustRole
      - TemplateS3Bucket
      - BuildIntegrationS3Bucket
      - TemplateCodeBuildProject
      - CloudFormationTrustRole
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: 'mosaic-aws-poc-template-pipeline'
      RoleArn: !GetAtt 'CodePipelineTrustRole.Arn'
      ArtifactStore:
        Type: S3
        Location: !Ref BuildIntegrationS3Bucket
      Stages:
        - Name: GithubSource
          Actions:
            - Name: FetchSource
              ActionTypeId:
                Category: Source
                Provider: GitHub
                Owner: ThirdParty
                Version: 1
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: 'master'
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref TemplateCodeBuildProject
              InputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1

  ### Resources needed for serving fragments
  ### S3 Bucket
  FragmentsS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: 'mosaic-aws-poc-fragments'

  ### Resources needed for content-two frontend project

  ### CodeBuild
  ContentTwoCodeBuildProject:
    DependsOn:
      - CodeBuildRole
      - FragmentsS3Bucket
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
        Packaging: zip
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: FRAGMENTS_BUCKET_NAME
            Value: !Ref FragmentsS3Bucket
      Name: 'mosaic-aws-poc-content-two'
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: 'frontend/content-two/buildspec.yml'

  ### CodePipeline
  ContentTwoPipeline:
    DependsOn:
      - CodePipelineTrustRole
      - FragmentsS3Bucket
      - BuildIntegrationS3Bucket
      - ContentTwoCodeBuildProject
      - CloudFormationTrustRole
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: 'mosaic-aws-poc-content-two-pipeline'
      RoleArn: !GetAtt 'CodePipelineTrustRole.Arn'
      ArtifactStore:
        Type: S3
        Location: !Ref BuildIntegrationS3Bucket
      Stages:
        - Name: GithubSource
          Actions:
            - Name: FetchSource
              ActionTypeId:
                Category: Source
                Provider: GitHub
                Owner: ThirdParty
                Version: 1
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: 'master'
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: BuildAndDeploy
          Actions:
            - Name: BuildAndDeploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref ContentTwoCodeBuildProject
              InputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1

  ### Resources needed for content-one frontend project

  ### CodeBuild
  ContentOneCodeBuildProject:
    DependsOn:
      - CodeBuildRole
      - FragmentsS3Bucket
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
        Packaging: zip
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: FRAGMENTS_BUCKET_NAME
            Value: !Ref FragmentsS3Bucket
      Name: 'mosaic-aws-poc-content-one'
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: 'frontend/content-one/buildspec.yml'

  ### CodePipeline
  ContentOnePipeline:
    DependsOn:
      - CodePipelineTrustRole
      - FragmentsS3Bucket
      - BuildIntegrationS3Bucket
      - ContentOneCodeBuildProject
      - CloudFormationTrustRole
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: 'mosaic-aws-poc-content-one-pipeline'
      RoleArn: !GetAtt 'CodePipelineTrustRole.Arn'
      ArtifactStore:
        Type: S3
        Location: !Ref BuildIntegrationS3Bucket
      Stages:
        - Name: GithubSource
          Actions:
            - Name: FetchSource
              ActionTypeId:
                Category: Source
                Provider: GitHub
                Owner: ThirdParty
                Version: 1
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: 'master'
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: BuildAndDeploy
          Actions:
            - Name: BuildAndDeploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref ContentOneCodeBuildProject
              InputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1

  ### Resources needed for fragments-lambda deployment
  FragmentsLambdaCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
        Packaging: zip
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: FRAGMENTS_BUCKET_NAME
            Value: !Ref FragmentsS3Bucket
          - Name: BUILD_INTEGRATION_S3_BUCKET_NAME
            Value: !Ref BuildIntegrationS3Bucket
      Name: 'mosaic-aws-poc-fragments-lambda'
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: 'lambda/fragments-lambda/buildspec.yml'

  FragmentsLambdaPipeline:
    DependsOn:
      - CodePipelineTrustRole
      - BuildIntegrationS3Bucket
      - FragmentsLambdaCodeBuildProject
      - CloudFormationTrustRole
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref BuildIntegrationS3Bucket
      Name: 'fragments-lambda-pipeline'
      RoleArn: !GetAtt 'CodePipelineTrustRole.Arn'
      Stages:
        - Name: GithubSource
          Actions:
            - Name: FetchSource
              ActionTypeId:
                Category: Source
                Provider: GitHub
                Owner: ThirdParty
                Version: 1
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: 'master'
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref FragmentsLambdaCodeBuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: GenerateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                ChangeSetName: fragments-lambda-changeset
                RoleArn: !GetAtt 'CloudFormationTrustRole.Arn'
                StackName: 'mosaic-aws-poc-fragments-lambda'
                TemplatePath: BuildArtifact::template-export.yml
                ParameterOverrides: '{"FragmentsBucketName": "mosaic-aws-poc-fragments"}'
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              RunOrder: 2
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: fragments-lambda-changeset
                StackName: 'mosaic-aws-poc-fragments-lambda'

  ### Resources needed for tailor-lambda deployment
  TailorLambdaCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
        Packaging: zip
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: TEMPLATES_BUCKET_NAME
            Value: !Ref TemplateS3Bucket
          - Name: BUILD_INTEGRATION_S3_BUCKET_NAME
            Value: !Ref BuildIntegrationS3Bucket
      Name: 'mosaic-aws-poc-tailor-lambda'
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: 'lambda/tailor-lambda/buildspec.yml'

  TailorLambdaPipeline:
    DependsOn:
      - CodePipelineTrustRole
      - BuildIntegrationS3Bucket
      - TailorLambdaCodeBuildProject
      - CloudFormationTrustRole
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref BuildIntegrationS3Bucket
      Name: 'tailor-lambda-pipeline'
      RoleArn: !GetAtt 'CodePipelineTrustRole.Arn'
      Stages:
        - Name: GithubSource
          Actions:
            - Name: FetchSource
              ActionTypeId:
                Category: Source
                Provider: GitHub
                Owner: ThirdParty
                Version: 1
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: 'master'
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref TailorLambdaCodeBuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: GenerateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                ChangeSetName: tailor-lambda-changeset
                RoleArn: !GetAtt 'CloudFormationTrustRole.Arn'
                StackName: 'mosaic-aws-poc-tailor-lambda'
                TemplatePath: BuildArtifact::template-export.yml
                ParameterOverrides: '{"TemplatesBucketName": "mosaic-aws-poc-templates"}'
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              RunOrder: 2
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: tailor-lambda-changeset
                StackName: 'mosaic-aws-poc-tailor-lambda'
